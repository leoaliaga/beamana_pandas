# -*- coding: utf-8 -*-
"""NuMIFluxTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lWphXNc-KYrEGTNdU5APpDxsaM-JeqpG

Notebook to make plots of the NuMI neutrino flux at the neutrino detectors

# Sofware
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import glob
from google.colab import drive

"""# Loading the input data

"""

files = glob.glob('/content/flux_info_g4numiv6_me000z200i_nominal_*_0001.csv')
df = pd.DataFrame()
for f in files:
    csv = pd.read_csv(f)
    df = df.append(csv)
df.head()

files2ka = glob.glob('/content/flux_info_g4numiv6_me000z200i_Plus2kAHorns_*_0008.csv')
df_2ka = pd.DataFrame()
for f in files2ka:
    csv = pd.read_csv(f)
    df_2ka = df_2ka.append(csv)
df_2ka.head()

files3mmx = glob.glob('/content/flux_info_g4numiv6_me000z200i_Plus3mmHorn1X_*_0010.csv')
df_3mmx = pd.DataFrame()
for f in files3mmx:
    csv = pd.read_csv(f)
    df_3mmx = df_3mmx.append(csv)

files3mmy = glob.glob('/content/flux_info_g4numiv6_me000z200i_Plus3mmHorn1Y_*_0012.csv')
df_3mmy = pd.DataFrame()
for f in files3mmy:
    csv = pd.read_csv(f)
    df_3mmy = df_3mmy.append(csv)

files7mmtgt = glob.glob('/content/flux_info_g4numiv6_me000z200i_Plus7mmTargetZ_*_0028.csv')
df_7mmtgt = pd.DataFrame()
for f in files7mmtgt:
    csv = pd.read_csv(f)
    df_7mmtgt = df_7mmtgt.append(csv)

"""# Variable definitions in each file
*   **NuType**: PDD code of the neutrino type. 14: muon neutrino, -14: muon antineutrino, 12: electron neutrino and -12: electron antineutrino
*   **EnerNu_X**: neutrino energy (GeV) of the detector X (NOvA ND, NOvA FD, MINERvA)
*   **Wgt_X**: weight to apply to consider the probability of the neutrino passing through the detector X (NOvA ND, NOvA FD, MINERvA)
*   **ParType**: PDG code of the neutrino parent type. 211: pion plus, -211: pion minus, etc
*   **ParProdPt and ParProdPz**: transversal and longitudinal momentum of the neutrino parents when they are produced 
*  **ParDecPt and ParDecPz**: transversal and longitudinal momentum of the neutrino parents when they decay

Note: each data file has the result of the 500 000 sumulated protons colliding on the NuMI target (POT)

# Data analysis 
*Subsets of the dataFrame with only one neutrino type
"""

numu        = df.loc[       df['NuType']        == 14]
numu_2ka    = df_2ka.loc[   df_2ka['NuType']    == 14]
numu_3mmx   = df_3mmx.loc[  df_3mmx['NuType']   == 14]
numu_3mmy   = df_3mmy.loc[  df_3mmy['NuType']   == 14]
numu_7mmtgt = df_7mmtgt.loc[df_7mmtgt['NuType'] == 14]
nue        = df.loc[        df['NuType']        == 12]
nue_2ka    = df_2ka.loc[    df_2ka['NuType']    == 12]
nue_3mmx   = df_3mmx.loc[   df_3mmx['NuType']   == 12]
nue_3mmy   = df_3mmy.loc[   df_3mmy['NuType']   == 12]
nue_7mmtgt = df_7mmtgt.loc[ df_7mmtgt['NuType'] == 12]

"""*   Plotting the muon neutrino energy distribution for NOvA ND and MINERvA

*   Plotting the neutrino energy distributions for each neutrino type at NOvA ND
"""

alphaval=0.1
mine=0
maxe=5
nbins=20
(val_numu       , bins_numu       , patches_numu       ) = plt.hist(numu['EnerNu_NOvAND']      , range=(mine, maxe) , bins=nbins, weights=numu['Wgt_NOvAND']       , alpha=alphaval, label='Nominal')
(val_numu_2ka   , bins_numu_2ka   , patches_numu_2ka   ) = plt.hist(numu_2ka['EnerNu_NOvAND']  , range=(mine, maxe) , bins=nbins, weights=numu_2ka['Wgt_NOvAND']   , alpha=alphaval, label='+2kA Horn current')
(val_numu_3mmx  , bins_numu_3mmx  , patches_numu_3mmx  ) = plt.hist(numu_3mmx['EnerNu_NOvAND'] , range=(mine, maxe) , bins=nbins, weights=numu_3mmx['Wgt_NOvAND']  , alpha=alphaval, label='+3mm X Horn-1')
(val_numu_3mmy  , bins_numu_3mmy  , patches_numu_3mmy  ) = plt.hist(numu_3mmy['EnerNu_NOvAND'] , range=(mine, maxe) , bins=nbins, weights=numu_3mmy['Wgt_NOvAND']  , alpha=alphaval, label='+3mm Y Horn-1')
(val_numu_7mmtgt, bins_numu_7mmtgt, patches_numu_7mmtgt) = plt.hist(numu_7mmtgt['EnerNu_NOvAND'],range=(mine, maxe) , bins=nbins, weights=numu_7mmtgt['Wgt_NOvAND'], alpha=alphaval, label='+7mm Z target')
plt.legend()
plt.ylabel('Muon neutrino flux')
plt.xlabel('Neutrino energy (GeV)')
plt.title('NuMI muon neutrino at NOvA ND')

rat_numu_2ka    = np.divide(val_numu_2ka   , val_numu)
rat_numu_3mmx   = np.divide(val_numu_3mmx  , val_numu)
rat_numu_3mmy   = np.divide(val_numu_3mmy  , val_numu)
rat_numu_7mmtgt = np.divide(val_numu_7mmtgt, val_numu)
bin_centers = 0.5*(bins_numu[:-1] + bins_numu[1:])
plt.ylim((0.9,1.15))

plt.ylabel('Flux ratio shift / nominal')
plt.xlabel('Neutrino energy (GeV)')
plt.title('NuMI muon neutrino at NOvA ND')

plt.plot(bin_centers,rat_numu_2ka   , label='+2kA Horn current /nominal') ## using bin_centers rather than edges
plt.plot(bin_centers,rat_numu_3mmx  , label='+3mm X Horn-1/nominal')
plt.plot(bin_centers,rat_numu_3mmy  , label='+3mm Y Horn-1/nominal') 
plt.plot(bin_centers,rat_numu_7mmtgt, label='+7mm Z target/nominal')
plt.legend()
plt.show()

alphaval=0.1
mine=0
maxe=5
nbins=10
(val_nue       , bins_nue       , patches_nue       ) = plt.hist(nue['EnerNu_NOvAND']      , range=(mine, maxe) , bins=nbins, weights=nue['Wgt_NOvAND']       , alpha=alphaval,label='Nominal')
(val_nue_2ka   , bins_nue_2ka   , patches_nue_2ka   ) = plt.hist(nue_2ka['EnerNu_NOvAND']  , range=(mine, maxe) , bins=nbins, weights=nue_2ka['Wgt_NOvAND']   , alpha=alphaval,label='+2kA Horn current')
(val_nue_3mmx  , bins_nue_3mmx  , patches_nue_3mmx  ) = plt.hist(nue_3mmx['EnerNu_NOvAND'] , range=(mine, maxe) , bins=nbins, weights=nue_3mmx['Wgt_NOvAND']  , alpha=alphaval,label='+3mm X Horn-1')
(val_nue_3mmy  , bins_nue_3mmy  , patches_nue_3mmy  ) = plt.hist(nue_3mmy['EnerNu_NOvAND'] , range=(mine, maxe) , bins=nbins, weights=nue_3mmy['Wgt_NOvAND']  , alpha=alphaval,label='+3mm Y Horn-1')
(val_nue_7mmtgt, bins_nue_7mmtgt, patches_nue_7mmtgt) = plt.hist(nue_7mmtgt['EnerNu_NOvAND'],range=(mine, maxe) , bins=nbins, weights=nue_7mmtgt['Wgt_NOvAND'], alpha=alphaval,label='+7mm Z target')
plt.legend()
plt.ylabel('Electron neutrino flux')
plt.xlabel('Neutrino energy (GeV)')
plt.title('NuMI electron neutrino at NOvA ND')

rat_nue_2ka=np.divide(val_nue_2ka,val_nue)
rat_nue_3mmx=np.divide(val_nue_3mmx,val_nue)
rat_nue_3mmy=np.divide(val_nue_3mmy,val_nue)
rat_nue_7mmtgt=np.divide(val_nue_7mmtgt,val_nue)
bin_centers = 0.5*(bins_nue[:-1] + bins_nue[1:])
plt.ylim((0.8,1.2))

plt.ylabel('Flux ratio shift / nominal')
plt.xlabel('Neutrino energy (GeV)')
plt.title('NuMI electron neutrino at NOvA ND')

plt.plot(bin_centers,rat_nue_2ka,label='+2kA/nominal') ## using bin_centers rather than edges
plt.plot(bin_centers,rat_nue_3mmx,label='+3mm X Horn-1/nominal')
plt.plot(bin_centers,rat_nue_3mmy,label='+3mm Y Horn-1/nominal') 
plt.plot(bin_centers,rat_nue_7mmtgt,label='+7mm Z target/nominal')
plt.legend()
plt.show()